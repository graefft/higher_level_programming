The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Import function:
	>>> add_integer = __import__('0-add_integer').add_integer

Test two small integers:
	>>> add_integer(2, 3)
	5

Test one integer:
	>>> add_integer(2)
	100

Test two floats:
	>>> add_integer(2.5, 3.4)
	5

Test one float:
	>>> add_integer(2.6)
	100

Test two negative integers:
	>>> add_integer(-2, -3)
	-5

Test one negative integer:
	>>> add_integer(-2)
	96

Test one negative and one positive integer:
	>>> add_integer(-2, 2)
	0

Test one negative and one positive float:
	>>> add_integer(-2.1, 2.2)
	0

Test two negative floats:
	>>> add_integer(-2.2, -3.3)
	-5

Test one negative float:
	>>> add_integer(-2.9)
	96

Test no arguments:
	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

Test 'None' as argument:
	>>> add_integer(None, 2)
	Traceback (most recent call last):
	TypeError: a must be an integer

Test one integer and one string:
	>>> add_integer(1, "Holberton")
	Traceback (most recent call last):
	TypeError: b must be an integer

Test infinity as argument:
	>>> add_integer(float("inf"), 42)
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

Test NaN as argument:
	>>> add_integer(float("nan"), 42)
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
